/*==============================================================*/
/* Table: CLASSROOM                                             */
/*==============================================================*/
create table CLASSROOM (
   CLASSROOM_ID         VARCHAR2(5)           not null,
   DEPARTMENT_NAME      VARCHAR2(50)          not null,
   COURSE_ID            VARCHAR2(5),
   CAPACITY             INTEGER               not null,
   CLASS_BUILDING       VARCHAR2(30)          not null,
   constraint PK_CLASSROOM primary key (CLASSROOM_ID)
);

/*==============================================================*/
/* Index: DEPARTMENT_CLASSROOM_FK                               */
/*==============================================================*/
create index DEPARTMENT_CLASSROOM_FK on CLASSROOM (
   DEPARTMENT_NAME ASC
);

/*==============================================================*/
/* Index: CLASSROOM_COURSE_FK                                   */
/*==============================================================*/
create index CLASSROOM_COURSE_FK on CLASSROOM (
   COURSE_ID ASC
);

/*==============================================================*/
/* Table: COURSE                                                */
/*==============================================================*/
create table COURSE (
   COURSE_ID            VARCHAR2(5)           not null,
   DEPARTMENT_NAME      VARCHAR2(50),
   COURSE_NAME          VARCHAR2(20)          not null,
   COURSE_CREDITS       INTEGER               not null,
   constraint PK_COURSE primary key (COURSE_ID)
);

/*==============================================================*/
/* Index: DEPARTMENT_COURSE_FK                                  */
/*==============================================================*/
create index DEPARTMENT_COURSE_FK on COURSE (
   DEPARTMENT_NAME ASC
);

/*==============================================================*/
/* Table: COURSE_PROFESSOR                                      */
/*==============================================================*/
create table COURSE_PROFESSOR (
   PROFESSOR_ID         VARCHAR2(5)           not null,
   COURSE_ID            VARCHAR2(5)           not null,
   constraint PK_COURSE_PROFESSOR primary key (PROFESSOR_ID, COURSE_ID)
);

/*==============================================================*/
/* Index: COURSE_PROFESSOR_FK                                   */
/*==============================================================*/
create index COURSE_PROFESSOR_FK on COURSE_PROFESSOR (
   PROFESSOR_ID ASC
);

/*==============================================================*/
/* Table: DEPARTMENT                                            */
/*==============================================================*/
create table DEPARTMENT (
   DEPARTMENT_NAME      VARCHAR2(50)          not null,
   BUILDING             VARCHAR2(100)         not null,
   constraint PK_DEPARTMENT primary key (DEPARTMENT_NAME)
);

/*==============================================================*/
/* Table: ENROLLMENT                                            */
/*==============================================================*/
create table ENROLLMENT (
   GRADE                FLOAT                 not null,
   ENROLLMENT_ID        VARCHAR2(5)           not null,
   STUDENTID            VARCHAR2(5)           not null,
   COURSE_ID            VARCHAR2(5)           not null,
   constraint PK_ENROLLMENT primary key (ENROLLMENT_ID)
);

/*==============================================================*/
/* Index: STUDENT_ENROLLMENT_FK                                 */
/*==============================================================*/
create index STUDENT_ENROLLMENT_FK on ENROLLMENT (
   STUDENTID ASC
);

/*==============================================================*/
/* Index: COURSE_ENROLLMENT_FK                                  */
/*==============================================================*/
create index COURSE_ENROLLMENT_FK on ENROLLMENT (
   COURSE_ID ASC
);

/*==============================================================*/
/* Table: MAJOR                                                 */
/*==============================================================*/
create table MAJOR (
   MAJOR_NAME           VARCHAR2(30)          not null,
   DEPARTMENT_NAME      VARCHAR2(50)          not null,
   constraint PK_MAJOR primary key (MAJOR_NAME)
);

/*==============================================================*/
/* Index: DEAPRTMENT_MAJOR_FK                                   */
/*==============================================================*/
create index DEAPRTMENT_MAJOR_FK on MAJOR (
   DEPARTMENT_NAME ASC
);

/*==============================================================*/
/* Table: PROFESSOR                                             */
/*==============================================================*/
create table PROFESSOR (
   PROFESSOR_ID         VARCHAR2(5)           not null,
   DEPARTMENT_NAME      VARCHAR2(50)          not null,
   PROFESSOR_FIRST_NAME VARCHAR2(20)          not null,
   PROFESSOR_LAST_NAME  VARCHAR2(20)          not null,
   PROFESSOR_HIRE_DATE  DATE                  not null,
   constraint PK_PROFESSOR primary key (PROFESSOR_ID)
);

/*==============================================================*/
/* Index: DEPARTMENT_PROFESSOR_FK                               */
/*==============================================================*/
create index DEPARTMENT_PROFESSOR_FK on PROFESSOR (
   DEPARTMENT_NAME ASC
);

/*==============================================================*/
/* Table: STUDENTS                                              */
/*==============================================================*/
create table STUDENTS (
   STUDENTID            VARCHAR2(5)           not null,
   MAJOR_NAME           VARCHAR2(30),
   STUDENTFIRSTNAME     VARCHAR2(20)          not null,
   STUDENTLASTNAME      VARCHAR2(20)          not null,
   STUDENT_DATE_OF_BIRTH DATE                  not null,
   constraint PK_STUDENTS primary key (STUDENTID)
);

/*==============================================================*/
/* Index: STUDENTS_MAJOR_FK                                     */
/*==============================================================*/
create index STUDENTS_MAJOR_FK on STUDENTS (
   MAJOR_NAME ASC
);

alter table CLASSROOM
   add constraint FK_CLASSROO_CLASSROOM_COURSE foreign key (COURSE_ID)
      references COURSE (COURSE_ID);

alter table CLASSROOM
   add constraint FK_CLASSROO_DEPARTMEN_DEPARTME foreign key (DEPARTMENT_NAME)
      references DEPARTMENT (DEPARTMENT_NAME);

alter table COURSE
   add constraint FK_COURSE_DEPARTMEN_DEPARTME foreign key (DEPARTMENT_NAME)
      references DEPARTMENT (DEPARTMENT_NAME);

alter table COURSE_PROFESSOR
   add constraint FK_COURSE_P_COURSE_PR_PROFESSO foreign key (PROFESSOR_ID)
      references PROFESSOR (PROFESSOR_ID);

alter table ENROLLMENT
   add constraint FK_ENROLLME_COURSE_EN_COURSE foreign key (COURSE_ID)
      references COURSE (COURSE_ID);

alter table ENROLLMENT
   add constraint FK_ENROLLME_STUDENT_E_STUDENTS foreign key (STUDENTID)
      references STUDENTS (STUDENTID);

alter table MAJOR
   add constraint FK_MAJOR_DEAPRTMEN_DEPARTME foreign key (DEPARTMENT_NAME)
      references DEPARTMENT (DEPARTMENT_NAME);

alter table PROFESSOR
   add constraint FK_PROFESSO_DEPARTMEN_DEPARTME foreign key (DEPARTMENT_NAME)
      references DEPARTMENT (DEPARTMENT_NAME);

alter table STUDENTS
   add constraint FK_STUDENTS_STUDENTS__MAJOR foreign key (MAJOR_NAME)
      references MAJOR (MAJOR_NAME);
      
      
      
/* Inserting 20 records into DEPARTMENT table */
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Computer Science', 'Engineering Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Physics', 'Science Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Chemistry', 'Science Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Mathematics', 'Science Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('English', 'Arts Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Biology', 'Science Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Geology', 'Science Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Electrical Engineering', 'Engineering Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Mechanical Engineering', 'Engineering Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Civil Engineering', 'Engineering Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Art', 'Arts Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Music', 'Arts Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Theatre', 'Arts Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Business', 'Business Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Economics', 'Business Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('History', 'Arts Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Psychology', 'Science Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Sociology', 'Arts Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Political Science', 'Arts Block');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME, BUILDING) VALUES ('Philosophy', 'Arts Block');


      
/* Inserting 20 records into MAJOR table */
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Computer Science', 'Computer Science');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Physics', 'Physics');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Chemistry', 'Chemistry');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Mathematics', 'Mathematics');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('English Literature', 'English');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Biology', 'Biology');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Economics', 'Economics');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Political Science', 'Political Science');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Sociology', 'Sociology');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Philosophy', 'Philosophy');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('History', 'History');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Geography', 'Geography');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Psychology', 'Psychology');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Mechanical Engineering', 'Mechanical Engineering');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Electrical Engineering', 'Electrical Engineering');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Civil Engineering', 'Civil Engineering');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Biochemistry', 'Biochemistry');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Art History', 'Art History');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Music', 'Music');
INSERT INTO MAJOR(MAJOR_NAME, DEPARTMENT_NAME) VALUES ('Theater', 'Theater');

/* Inserting 20 records into PROFESSOR table */
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR1', 'Computer Science', 'John', 'Doe', DATE '2015-09-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR2', 'Physics', 'Jane', 'Doe', DATE '2016-07-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR3', 'Chemistry', 'Robert', 'Smith', DATE '2017-06-15');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR4', 'Mathematics', 'Maria', 'Rodriguez', DATE '2018-05-10');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR5', 'English', 'Paul', 'Garcia', DATE '2019-04-05');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR6', 'Biology', 'Patricia', 'Miller', DATE '2020-03-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR7', 'History', 'James', 'Martinez', DATE '2021-02-20');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR8', 'Art', 'Linda', 'Hernandez', DATE '2022-01-15');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR9', 'Art', 'Michael', 'Moore', DATE '2022-12-10');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR10', 'Music', 'Jennifer', 'Brown', DATE '2023-11-05');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR11', 'Computer Science', 'Thomas', 'Taylor', DATE '2014-10-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR12', 'Physics', 'Jessica', 'Anderson', DATE '2015-09-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR13', 'Chemistry', 'David', 'Thomas', DATE '2016-08-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR14', 'Mathematics', 'Sarah', 'Jackson', DATE '2017-07-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR15', 'English', 'Charles', 'White', DATE '2018-06-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR16', 'Biology', 'Susan', 'Harris', DATE '2019-05-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR17', 'History', 'Joseph', 'Clark', DATE '2020-04-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR18', 'History', 'Margaret', 'Lewis', DATE '2021-03-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR19', 'Art', 'Christopher', 'Lee', DATE '2022-02-01');
INSERT INTO PROFESSOR(PROFESSOR_ID, DEPARTMENT_NAME, PROFESSOR_FIRST_NAME, PROFESSOR_LAST_NAME, PROFESSOR_HIRE_DATE) VALUES ('PR20', 'Music', 'Mary', 'Walker', DATE '2023-01-01');


/* Inserting 20 records into COURSE table */
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C1', 'Computer Science', 'Data Structures', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C2', 'Computer Science', 'Algorithms', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C3', 'Computer Science', 'Database Systems', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C4', 'Computer Science', 'Operating Systems', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C5', 'Computer Science', 'Computer Networks', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C6', 'Physics', 'Quantum Mechanics', 4);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C7', 'Physics', 'Electrodynamics', 4);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C8', 'Physics', 'Statistical ', 4);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C9', 'Physics', 'Classical Mechanics', 4);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C10', 'Physics', 'Mathematical Physics', 4);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C11', 'English', 'Shakespearean Drama', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C12', 'English', 'Modernist Literature', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C13', 'English', 'American Literature', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C14', 'English', 'Romantic Poetry', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C15', 'English', 'Critical Theory', 3);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C16', 'Mathematics', 'Calculus', 4);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C17', 'Mathematics', 'Linear Algebra', 4);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C18', 'Mathematics', 'Differential ', 4);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C19', 'Mathematics', 'Abstract Algebra', 4);
INSERT INTO COURSE(COURSE_ID, DEPARTMENT_NAME, COURSE_NAME, COURSE_CREDITS) VALUES ('C20', 'Mathematics', 'Probability ', 4);


/* Inserting records into CLASSROOM table */
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR1', 'Computer Science', 'C1', 60, 'Engineering Block 1');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR2', 'Physics', 'C2', 50, 'Science Block 1');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR3', 'Mathematics', 'C1', 70, 'Science Block 2');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR4', 'Chemistry', 'C2', 80, 'Science Block 3');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR5', 'Biology', 'C1', 55, 'Science Block 4');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR6', 'English', 'C2', 45, 'Arts Block 1');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR7', 'History', 'C1', 65, 'Arts Block 2');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR8', 'History', 'C2', 75, 'Arts Block 3');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR9', 'Sociology', 'C1', 85, 'Arts Block 4');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR10', 'Psychology', 'C2', 60, 'Arts Block 5');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR11', 'Philosophy', 'C1', 50, 'Arts Block 6');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR12', 'Political Science', 'C2', 70, 'Arts Block 7');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR13', 'Economics', 'C1', 80, 'Business Block 1');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR14', 'Business', 'C2', 55, 'Business Block 2');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR15', 'Business', 'C1', 45, 'Business Block 3');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR16', 'Business', 'C2', 65, 'Business Block 4');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR17', 'Sociology', 'C1', 75, 'Business Block 5');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR18', 'Business', 'C2', 85, 'Business Block 6');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR19', 'Philosophy', 'C1', 60, 'Business Block 7');
INSERT INTO CLASSROOM(CLASSROOM_ID, DEPARTMENT_NAME, COURSE_ID, CAPACITY, CLASS_BUILDING) VALUES ('CR20', 'Business', 'C2', 50, 'Business Block 8');

/* Inserting records into STUDENTS table */
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S1', 'Computer Science', 'Alice', 'Smith', DATE '2001-08-20');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S2', 'Physics', 'Bob', 'Johnson', DATE '2002-03-15');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S3', 'Chemistry', 'Charlie', 'Brown', DATE '2000-06-15');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S4', 'Mathematics', 'Daisy', 'Green', DATE '2002-02-22');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S5', 'English Literature', 'Edward', 'White', DATE '2001-01-01');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S6', 'Computer Science', 'Fiona', 'Black', DATE '2002-12-12');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S7', 'Physics', 'George', 'Blue', DATE '2000-11-11');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S8', 'Chemistry', 'Hannah', 'Yellow', DATE '2001-10-10');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S9', 'Mathematics', 'Ivan', 'Gray', DATE '2000-09-09');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S10', 'English Literature', 'Julia', 'Purple', DATE '2001-08-08');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S11', 'Computer Science', 'Kevin', 'Red', DATE '2000-07-07');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S12', 'Physics', 'Lily', 'Orange', DATE '2001-06-06');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S13', 'Chemistry', 'Michael', 'Green', DATE '2000-05-05');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S14', 'Mathematics', 'Nancy', 'Blue', DATE '2001-04-04');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S15', 'English Literature', 'Oscar', 'Yellow', DATE '2000-03-03');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S16', 'Computer Science', 'Patricia', 'Gray', DATE '2001-02-02');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S17', 'Physics', 'Quentin', 'Purple', DATE '2000-01-01');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S18', 'Chemistry', 'Rebecca', 'Red', DATE '2001-12-12');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S19', 'Mathematics', 'Steven', 'Orange', DATE '2000-11-11');
INSERT INTO STUDENTS(STUDENTID, MAJOR_NAME, STUDENTFIRSTNAME, STUDENTLASTNAME, STUDENT_DATE_OF_BIRTH) VALUES ('S20', 'English Literature', 'Teresa', 'Green', DATE '2001-10-10');


/* Inserting records into ENROLLMENT table */
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (85.5, 'E1', 'S1', 'C1');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (91.0, 'E2', 'S2', 'C2');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (78.0, 'E3', 'S3', 'C3');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (82.5, 'E4', 'S4', 'C4');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (88.0, 'E5', 'S5', 'C5');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (90.5, 'E6', 'S6', 'C6');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (85.0, 'E7', 'S7', 'C7');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (93.0, 'E8', 'S8', 'C8');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (78.5, 'E9', 'S9', 'C9');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (81.0, 'E10', 'S10', 'C10');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (89.5, 'E11', 'S11', 'C11');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (87.0, 'E12', 'S12', 'C12');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (80.0, 'E13', 'S13', 'C13');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (86.5, 'E14', 'S14', 'C14');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (84.0, 'E15', 'S15', 'C15');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (91.5, 'E16', 'S16', 'C16');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (79.0, 'E17', 'S17', 'C17');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (92.5, 'E18', 'S18', 'C18');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (83.0, 'E19', 'S19', 'C19');
INSERT INTO ENROLLMENT(GRADE, ENROLLMENT_ID, STUDENTID, COURSE_ID) VALUES (88.5, 'E20', 'S20', 'C20');



/* Inserting records into COURSE_PROFESSOR table */
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR1', 'C1');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR2', 'C2');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR3', 'C3');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR4', 'C4');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR5', 'C5');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR6', 'C6');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR7', 'C7');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR8', 'C8');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR9', 'C9');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR10', 'C10');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR11', 'C11');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR12', 'C12');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR13', 'C13');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR14', 'C14');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR15', 'C15');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR16', 'C16');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR17', 'C17');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR18', 'C18');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR19', 'C19');
INSERT INTO COURSE_PROFESSOR(PROFESSOR_ID, COURSE_ID) VALUES ('PR20', 'C20');


-- Heap-Organized Table: STUDENTS
CREATE TABLE STUDENTS_HEAP (
   STUDENTID            VARCHAR2(5)           not null,
   MAJOR_NAME           VARCHAR2(30),
   STUDENTFIRSTNAME     VARCHAR2(20)          not null,
   STUDENTLASTNAME      VARCHAR2(20)          not null,
   STUDENT_DATE_OF_BIRTH DATE                  not null,
   CONSTRAINT PK_STUDENTS_HEAP PRIMARY KEY (STUDENTID)
) ORGANIZATION HEAP;


-- Heap-Organized Table: ENROLLMENT

CREATE TABLE ENROLLMENT_HEAP (
   GRADE                FLOAT                 not null,
   ENROLLMENT_ID        VARCHAR2(5)           not null,
   STUDENTID            VARCHAR2(5)           not null,
   COURSE_ID            VARCHAR2(5)           not null,
   CONSTRAINT PK_ENROLLMENT_HEAP PRIMARY KEY (ENROLLMENT_ID)
) ORGANIZATION HEAP;


INSERT INTO STUDENTS_HEAP
SELECT * FROM STUDENTS;

INSERT INTO ENROLLMENT_HEAP
SELECT * FROM ENROLLMENT;



-- 1.b B-Tree index: For STUDENTS_HEAP table
CREATE INDEX student_idx ON STUDENTS_HEAP(MAJOR_NAME);

-- B-Tree index: For ENROLLMENT_HEAP table
CREATE INDEX enrollment_idx ON ENROLLMENT_HEAP(GRADE);


--BITMAP JOIN INDEX
CREATE BITMAP INDEX enrollment_students_bji ON ENROLLMENT (GRADE);


-- 1.d Indexed Cluster: For STUDENTS_HEAP and ENROLLMENT_HEAP tables
CREATE CLUSTER STUDENTS_ENROLLMENT_HEAP_CLUSTER (STUDENTID VARCHAR2(5))
SIZE 512;

-- Creating an index on the cluster
CREATE INDEX STUDENTS_ENROLLMENT_HEAP_CLUSTER_IDX 
ON CLUSTER STUDENTS_ENROLLMENT_HEAP_CLUSTER;

-- Creating tables in the cluster
CREATE TABLE STUDENTS_HEAP_CLUSTER 
CLUSTER STUDENTS_ENROLLMENT_HEAP_CLUSTER (STUDENTID)
AS SELECT * FROM STUDENTS_HEAP;

CREATE TABLE ENROLLMENT_HEAP_CLUSTER 
CLUSTER STUDENTS_ENROLLMENT_HEAP_CLUSTER (STUDENTID)
AS SELECT * FROM ENROLLMENT_HEAP;



INSERT INTO STUDENTS_HEAP_CLUSTER
SELECT * FROM STUDENTS_HEAP;

INSERT INTO ENROLLMENT_HEAP_CLUSTER
SELECT * FROM ENROLLMENT_HEAP;





-- Hash Cluster for STUDENTS_HEAP table
CREATE CLUSTER STUDENTS_HEAP_HASH_CLUSTER (STUDENTID VARCHAR2(5))
SIZE 512 SINGLE TABLE HASHKEYS 1000;


CREATE TABLE STUDENTS_HEAP_HASH_TABLE 
CLUSTER STUDENTS_HEAP_HASH_CLUSTER (STUDENTID)
AS SELECT * FROM STUDENTS_HEAP;

-- Hash Cluster for ENROLLMENT_HEAP table
CREATE CLUSTER ENROLLMENT_HEAP_HASH_CLUSTER (ENROLLMENT_ID VARCHAR2(5))
SIZE 512 SINGLE TABLE HASHKEYS 1000;

CREATE TABLE ENROLLMENT_HEAP_HASH_TABLE 
CLUSTER ENROLLMENT_HEAP_HASH_CLUSTER (ENROLLMENT_ID)
AS SELECT * FROM ENROLLMENT_HEAP;



INSERT INTO STUDENTS_HEAP_HASH_TABLE
SELECT * FROM STUDENTS_HEAP;


INSERT INTO ENROLLMENT_HEAP_HASH_TABLE
SELECT * FROM ENROLLMENT_HEAP;


-- 1.f Index organized tables: For STUDENTS_HEAP table
CREATE TABLE STUDENTS_HEAP_IOT ( 
   STUDENTID            VARCHAR2(5)           not null,
   MAJOR_NAME           VARCHAR2(30),
   STUDENTFIRSTNAME     VARCHAR2(20)          not null,
   STUDENTLASTNAME      VARCHAR2(20)          not null,
   STUDENT_DATE_OF_BIRTH DATE                  not null,
   CONSTRAINT PK_STUDENTS_IOT PRIMARY KEY (STUDENTID)
) ORGANIZATION INDEX;


-- Index organized tables: For ENROLLMENT_HEAP table
CREATE TABLE ENROLLMENT_HEAP_IOT (
   GRADE                FLOAT                 not null,
   ENROLLMENT_ID        VARCHAR2(5)           not null,
   STUDENTID            VARCHAR2(5)           not null,
   COURSE_ID            VARCHAR2(5)           not null,
   CONSTRAINT PK_ENROLLMENT_IOT PRIMARY KEY (ENROLLMENT_ID)
) ORGANIZATION INDEX;



INSERT INTO STUDENTS_HEAP_IOT
SELECT * FROM STUDENTS_HEAP;

INSERT INTO ENROLLMENT_HEAP_IOT
SELECT * FROM ENROLLMENT_HEAP;



--Heap Organised Queries 
--Select all records:
SELECT * FROM STUDENTS_HEAP;

--Select the total number of records:
SELECT COUNT(*) FROM STUDENTS_HEAP;

--Select one record:
SELECT * FROM STUDENTS_HEAP WHERE ROWNUM = 1;



--B-Tree index Queries

--Select all records:
SELECT * FROM ENROLLMENT_HEAP WHERE GRADE IS NOT NULL;

--Select the total number of records:
SELECT COUNT(*) FROM ENROLLMENT_HEAP WHERE GRADE IS NOT NULL;

--Select one record:
SELECT * FROM ENROLLMENT_HEAP WHERE GRADE IS NOT NULL AND ROWNUM = 1;

-- Bitmap join index:
--Select all records:
SELECT * FROM ENROLLMENT WHERE GRADE IS NOT NULL;

--Select the total number of records:
SELECT COUNT(*) FROM ENROLLMENT WHERE GRADE IS NOT NULL;

--Select one record:
SELECT * FROM ENROLLMENT WHERE GRADE IS NOT NULL AND ROWNUM = 1;

-- Indexed Cluster:

--Select all records:
SELECT * FROM ENROLLMENT_HEAP_CLUSTER;

--Select the total number of records:
SELECT COUNT(*) FROM ENROLLMENT_HEAP_CLUSTER;

--Select one record:
SELECT * FROM ENROLLMENT_HEAP_CLUSTER WHERE ROWNUM = 1;

-- Hash Cluster:
--Select all records:
SELECT * FROM STUDENTS_HEAP_HASH_TABLE;

--Select the total number of records:
SELECT COUNT(*) FROM STUDENTS_HEAP_HASH_TABLE;

--Select one record:
SELECT * FROM STUDENTS_HEAP_HASH_TABLE WHERE ROWNUM = 1;

--Index organized tables:

--Select all records:
SELECT * FROM STUDENTS_HEAP_IOT;

--Select the total number of records:
SELECT COUNT(*) FROM STUDENTS_HEAP_IOT;

--Select one record:
SELECT * FROM STUDENTS_HEAP_IOT WHERE ROWNUM = 1;




--Assignment 4


--Query with one table and multiple conditions in WHERE clause:
SELECT *
FROM STUDENTS
WHERE MAJOR_NAME = 'Computer Science' AND STUDENT_DATE_OF_BIRTH BETWEEN DATE '2001-01-01' AND DATE '2002-12-31';


--Query with two related tables and multiple conditions in WHERE clause:
SELECT *
FROM STUDENTS S
JOIN ENROLLMENT E ON S.STUDENTID = E.STUDENTID
WHERE S.MAJOR_NAME = 'Computer Science' AND E.GRADE > 80;


--Query with GROUP BY:
SELECT MAJOR_NAME, COUNT(*)
FROM STUDENTS
GROUP BY MAJOR_NAME;


--Query with two related tables and GROUP BY:
SELECT S.MAJOR_NAME, AVG(E.GRADE)
FROM STUDENTS S
JOIN ENROLLMENT E ON S.STUDENTID = E.STUDENTID
GROUP BY S.MAJOR_NAME;


--Query with GROUP BY and HAVING clause:
SELECT MAJOR_NAME, COUNT(*)
FROM STUDENTS
GROUP BY MAJOR_NAME
HAVING COUNT(*) > 3;


--Query with two related tables, GROUP BY and HAVING clause:
SELECT S.MAJOR_NAME, AVG(E.GRADE)
FROM STUDENTS S
JOIN ENROLLMENT E ON S.STUDENTID = E.STUDENTID
GROUP BY S.MAJOR_NAME
HAVING AVG(E.GRADE) > 80;


--Query with subquery in SELECT clause:
SELECT STUDENTFIRSTNAME, STUDENTLASTNAME, (SELECT MAJOR_NAME FROM MAJOR WHERE MAJOR_NAME = S.MAJOR_NAME) AS Major
FROM STUDENTS S;


--Query with subquery in FROM clause:
SELECT AVG(GRADE) 
FROM (
    SELECT * FROM (
        SELECT GRADE 
        FROM ENROLLMENT 
        ORDER BY GRADE DESC
    ) 
    WHERE ROWNUM <= 10
);





--Query with subquery in WHERE clause:
SELECT *
FROM STUDENTS
WHERE MAJOR_NAME IN (SELECT MAJOR_NAME FROM MAJOR WHERE DEPARTMENT_NAME = 'Computer Science');


--Query with subquery in HAVING clause:
SELECT S.MAJOR_NAME, AVG(E.GRADE)
FROM STUDENTS S
JOIN ENROLLMENT E ON S.STUDENTID = E.STUDENTID
GROUP BY S.MAJOR_NAME
HAVING AVG(E.GRADE) > (SELECT AVG(GRADE) FROM ENROLLMENT);


--Query with UNION, INTERSECT, MINUS construction:

-- Union
SELECT DEPARTMENT_NAME FROM DEPARTMENT
UNION
SELECT DEPARTMENT_NAME FROM COURSE;

-- Intersect
SELECT DEPARTMENT_NAME FROM DEPARTMENT
INTERSECT
SELECT DEPARTMENT_NAME FROM COURSE;

-- Minus
SELECT DEPARTMENT_NAME FROM DEPARTMENT
MINUS
SELECT DEPARTMENT_NAME FROM COURSE;



--Query with EXISTS construction:
SELECT *
FROM STUDENTS S
WHERE EXISTS (
    SELECT 1
    FROM ENROLLMENT E
    WHERE S.STUDENTID = E.STUDENTID AND E.GRADE > 85
);




